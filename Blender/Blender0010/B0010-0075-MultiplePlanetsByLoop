import bpy
import math
import random

# Change to Object Mode
if bpy.ops.object.mode_set.poll():
    bpy.ops.object.mode_set(mode='OBJECT')

bpy.ops.object.select_all(action='DESELECT')

[obj.select_set(True) for obj in bpy.context.scene.objects if obj.type == 'MESH']
bpy.ops.object.delete()

# create Sun
bpy.ops.mesh.primitive_uv_sphere_add(radius=3, location=(0,0,0))
sun = bpy.context.object
mat = bpy.data.materials.new(name='Sun_material')
mat.diffuse_color = (1.0, 1.0, 0.0, 1.0)  # (red, green, blue, alpha)
sun.data.materials.append(mat)

bpy.ops.mesh.primitive_uv_sphere_add(radius=1, location=(10,0,0))
earth = bpy.context.object
mat = bpy.data.materials.new(name='earth_material')
mat.diffuse_color = (0.0, 0.0, 1.0, 1.0)  # (red, green, blue, alpha)
earth.data.materials.append(mat)

planets = []
planets_size = []
planets_z = []
planets_angle = []
planets_angle_step = []
for i in range(20):
    bpy.ops.mesh.primitive_uv_sphere_add(radius=1, location=(20,0,0))
    planets.append(bpy.context.object)
    planets_size.append(random.random() * 50 + 1)
    planets_angle.append(0)
    planets_angle_step.append(random.random()*0.1 + 0.001)
    planets_z.append(random.random()*100)

# animation
scene = bpy.context.scene
scene.frame_start = 1
scene.frame_end = 1000
angle = 0
angle2 = 0
for frame in range(1000):
    for idx, planet in enumerate(planets):
        angle = planets_angle[idx]
        x = math.cos(angle) * planets_size[idx]
        y = math.sin(angle) * planets_size[idx]
        z = math.sin(angle) * planets_z[idx]
        angle += planets_angle_step[idx]
        planets_angle[idx] = angle
        planet.location = (x, y, z)
        planet.keyframe_insert(data_path="location", frame=frame)

    
